// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package inego.evo.proto;

/**
 * Protobuf enum {@code game.IndividualProperty}
 */
public enum IndividualProperty
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>IP_BIG = 1;</code>
   */
  IP_BIG(1),
  /**
   * <code>IP_BURROWING = 2;</code>
   */
  IP_BURROWING(2),
  /**
   * <code>IP_CAMOUFLAGE = 3;</code>
   */
  IP_CAMOUFLAGE(3),
  /**
   * <code>IP_CARNIVOROUS = 4;</code>
   */
  IP_CARNIVOROUS(4),
  /**
   * <code>IP_GRAZING = 5;</code>
   */
  IP_GRAZING(5),
  /**
   * <code>IP_HIBERNATION = 6;</code>
   */
  IP_HIBERNATION(6),
  /**
   * <code>IP_MIMICRY = 7;</code>
   */
  IP_MIMICRY(7),
  /**
   * <code>IP_PARASITE = 8;</code>
   */
  IP_PARASITE(8),
  /**
   * <code>IP_PIRACY = 9;</code>
   */
  IP_PIRACY(9),
  /**
   * <code>IP_POISONOUS = 10;</code>
   */
  IP_POISONOUS(10),
  /**
   * <code>IP_RUNNING = 11;</code>
   */
  IP_RUNNING(11),
  /**
   * <code>IP_SCAVENGER = 12;</code>
   */
  IP_SCAVENGER(12),
  /**
   * <code>IP_SHARP_VISION = 13;</code>
   */
  IP_SHARP_VISION(13),
  /**
   * <code>IP_SWIMMING = 14;</code>
   */
  IP_SWIMMING(14),
  /**
   * <code>IP_TAIL_LOSS = 15;</code>
   */
  IP_TAIL_LOSS(15),
  /**
   * <pre>
   * Only for compatibility with the main enum
   * </pre>
   *
   * <code>IP_FAT_TISSUE = 16;</code>
   */
  IP_FAT_TISSUE(16),
  ;

  /**
   * <code>IP_BIG = 1;</code>
   */
  public static final int IP_BIG_VALUE = 1;
  /**
   * <code>IP_BURROWING = 2;</code>
   */
  public static final int IP_BURROWING_VALUE = 2;
  /**
   * <code>IP_CAMOUFLAGE = 3;</code>
   */
  public static final int IP_CAMOUFLAGE_VALUE = 3;
  /**
   * <code>IP_CARNIVOROUS = 4;</code>
   */
  public static final int IP_CARNIVOROUS_VALUE = 4;
  /**
   * <code>IP_GRAZING = 5;</code>
   */
  public static final int IP_GRAZING_VALUE = 5;
  /**
   * <code>IP_HIBERNATION = 6;</code>
   */
  public static final int IP_HIBERNATION_VALUE = 6;
  /**
   * <code>IP_MIMICRY = 7;</code>
   */
  public static final int IP_MIMICRY_VALUE = 7;
  /**
   * <code>IP_PARASITE = 8;</code>
   */
  public static final int IP_PARASITE_VALUE = 8;
  /**
   * <code>IP_PIRACY = 9;</code>
   */
  public static final int IP_PIRACY_VALUE = 9;
  /**
   * <code>IP_POISONOUS = 10;</code>
   */
  public static final int IP_POISONOUS_VALUE = 10;
  /**
   * <code>IP_RUNNING = 11;</code>
   */
  public static final int IP_RUNNING_VALUE = 11;
  /**
   * <code>IP_SCAVENGER = 12;</code>
   */
  public static final int IP_SCAVENGER_VALUE = 12;
  /**
   * <code>IP_SHARP_VISION = 13;</code>
   */
  public static final int IP_SHARP_VISION_VALUE = 13;
  /**
   * <code>IP_SWIMMING = 14;</code>
   */
  public static final int IP_SWIMMING_VALUE = 14;
  /**
   * <code>IP_TAIL_LOSS = 15;</code>
   */
  public static final int IP_TAIL_LOSS_VALUE = 15;
  /**
   * <pre>
   * Only for compatibility with the main enum
   * </pre>
   *
   * <code>IP_FAT_TISSUE = 16;</code>
   */
  public static final int IP_FAT_TISSUE_VALUE = 16;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static IndividualProperty valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static IndividualProperty forNumber(int value) {
    switch (value) {
      case 1: return IP_BIG;
      case 2: return IP_BURROWING;
      case 3: return IP_CAMOUFLAGE;
      case 4: return IP_CARNIVOROUS;
      case 5: return IP_GRAZING;
      case 6: return IP_HIBERNATION;
      case 7: return IP_MIMICRY;
      case 8: return IP_PARASITE;
      case 9: return IP_PIRACY;
      case 10: return IP_POISONOUS;
      case 11: return IP_RUNNING;
      case 12: return IP_SCAVENGER;
      case 13: return IP_SHARP_VISION;
      case 14: return IP_SWIMMING;
      case 15: return IP_TAIL_LOSS;
      case 16: return IP_FAT_TISSUE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<IndividualProperty>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      IndividualProperty> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<IndividualProperty>() {
          public IndividualProperty findValueByNumber(int number) {
            return IndividualProperty.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return inego.evo.proto.GameProtos.getDescriptor().getEnumTypes().get(0);
  }

  private static final IndividualProperty[] VALUES = values();

  public static IndividualProperty valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private IndividualProperty(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:game.IndividualProperty)
}

